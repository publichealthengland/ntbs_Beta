name: Run UI tests

on:
  schedule:
    - cron:  '00 21 * * *'
  workflow_dispatch:
    inputs:
      env:
        description: 'Enter the name of an environment, like `training`  or `test`'
        required: true
        default: 'int'

jobs:
  run-ui-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Discover public IP of runner
        id: ip
        uses: haythem/public-ip@v1.2
      - name: Login to Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Whitelist IP
        env:
          RUNNER_IP: ${{ steps.ip.outputs.ipv4 }}
        run: |
          az network nsg rule create --name sql-server-ui-tests --nsg-name ntbs-ops-dbs-nsg --resource-group NTBS_Development-northeurope --access Allow --direction Inbound --protocol Tcp --source-address-prefixes "$RUNNER_IP" --destination-port-ranges 62528 --priority 1625
          az network nsg rule create --name sql-server-browser-ui-tests --nsg-name ntbs-ops-dbs-nsg --resource-group NTBS_Development-northeurope --access Allow --direction Inbound --protocol Udp --source-address-prefixes "$RUNNER_IP" --destination-port-ranges 1434 --priority 1626
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Set environment
        id: set_environment
        env:
          DEFAULT_ENVIRONMENT: int
        run: echo "::set-output name=ENVIRONMENT_UNDER_TEST::${{ github.event.inputs.env || env.DEFAULT_ENVIRONMENT }}"
      - name: Download Selenium
        working-directory: ntbs-ui-tests
        run: wget https://selenium-release.storage.googleapis.com/3.141/selenium-server-standalone-3.141.59.jar -O selenium-server-standalone.jar
      - name: Run UI tests
        working-directory: ntbs-ui-tests
        env:
          EnvironmentUnderTest: ${{ steps.set_environment.outputs.ENVIRONMENT_UNDER_TEST }}
          Users__BirminghamServiceUser__Password: ${{ secrets.UI_TESTS_BIRMINGHAM_SERVICE_USER_PASSWORD }}
          Users__LeedsServiceUser__Password: ${{ secrets.UI_TESTS_LEEDS_SERVICE_USER_PASSWORD }}
          Users__ReadOnlyUser__Password: ${{ secrets.UI_TESTS_READ_ONLY_USER_PASSWORD }}
          Environments__int__ConnectionString: ${{ secrets.UI_TESTS_INT_CONNECTION_STRING }}
          Environments__test__ConnectionString: ${{ secrets.UI_TESTS_TEST_CONNECTION_STRING }}
          Environments__uat__ConnectionString: ${{ secrets.UI_TESTS_UAT_CONNECTION_STRING }}
          Environments__int__MigrationConnectionString: ${{ secrets.UI_TESTS_INT_MIGRATION_CONNECTION_STRING }}
          Environments__test__MigrationConnectionString: ${{ secrets.UI_TESTS_TEST_MIGRATION_CONNECTION_STRING }}
          Environments__uat__MigrationConnectionString: ${{ secrets.UI_TESTS_UAT_MIGRATION_CONNECTION_STRING }}
          Environments__int__ImportedNotificationNtbsEnvironment: ${{ secrets.UI_TESTS_INT_IMPORTED_NOTIFICATION_NTBS_ENVIRONMENT }}
          Environments__test__ImportedNotificationNtbsEnvironment: ${{ secrets.UI_TESTS_TEST_IMPORTED_NOTIFICATION_NTBS_ENVIRONMENT }}
          Environments__uat__ImportedNotificationNtbsEnvironment: ${{ secrets.UI_TESTS_UAT_IMPORTED_NOTIFICATION_NTBS_ENVIRONMENT }}
          Environments__int__SpecimenConnectionString: ${{ secrets.UI_TESTS_INT_SPECIMEN_CONNECTION_STRING }}
          Environments__test__SpecimenConnectionString: ${{ secrets.UI_TESTS_TEST_SPECIMEN_CONNECTION_STRING }}
          Environments__uat__SpecimenConnectionString: ${{ secrets.UI_TESTS_UAT_SPECIMEN_CONNECTION_STRING }}
        run: |
          java -jar selenium-server-standalone.jar > /dev/null 2>&1 &
          PROCESS_ID=$(echo $!)
          echo "Selenium server started in process $PROCESS_ID"
          function stopSeleniumServer()
          {
              echo "Shutting down selenium server in process $PROCESS_ID..."
              kill $PROCESS_ID
              echo "Successfully shut down selenium server."
          }
          trap stopSeleniumServer EXIT
          echo "Running tests..."
          dotnet test
      - name: Remove IP from whitelist
        if: ${{ always() }}
        run: |
          az network nsg rule delete --name sql-server-ui-tests --nsg-name ntbs-ops-dbs-nsg --resource-group NTBS_Development-northeurope
          az network nsg rule delete --name sql-server-browser-ui-tests --nsg-name ntbs-ops-dbs-nsg --resource-group NTBS_Development-northeurope

      # Notify slack
      - name: Notify success
        if: ${{ success() }}
        uses: rtCamp/action-slack-notify@v2.1.0
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: '#dev-ci'
          SLACK_USERNAME: github actions
          SLACK_COLOR: '#23b828' #green
          SLACK_MESSAGE: The UI tests have passed
          SLACK_TITLE: ':green_heart: :computer: Build succeeded'
          SLACK_ICON_EMOJI: ':octopus:'
          SLACK_FOOTER: ''
      - name: Notify failure
        if: ${{ failure() }}
        uses: rtCamp/action-slack-notify@v2.1.0
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: '#dev-ci'
          SLACK_USERNAME: github actions
          SLACK_COLOR: '#d12121' #red
          SLACK_MESSAGE: '@here The UI tests have failed'
          SLACK_TITLE: ':red_circle: :computer: Build failed'
          SLACK_ICON_EMOJI: ':octopus:'
          SLACK_FOOTER: ''
