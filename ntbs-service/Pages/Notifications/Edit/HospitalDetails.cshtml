@page "/Notifications/{NotificationId:int}/Edit/HospitalDetails/{handler?}"
@model ntbs_service.Pages.Notifications.Edit.HospitalDetailsModel
@using static NHSUK.FrontEndLibrary.TagHelpers.FormGroupType
@using NHSUK.FrontEndLibrary.TagHelpers
@using ntbs_service.Models.Enums

@{
    Layout = "../../Shared/_NotificationEditLayout.cshtml";
    var title = NotificationSection.HospitalDetails.ToDisplayString();
    ViewData["Title"] = $"Notification #{Model.NotificationId} - {title}";
    var fullValidation = Model.HospitalDetails.ShouldValidateFull ? "True" : "False";
}

<partial name="_SinglePageErrorSummaryPartial" />

<div id="hospital-details-page-content">
    <h2>Notification Date (required)</h2>
    <validate-date model="Notification" property="NotificationDate" notification_id="@Model.Notification.NotificationId" inline-template>
        @{
            var hasNotificationDateError = !Model.IsValid("Notification.NotificationDate");
            var notificationDateGroupState = hasNotificationDateError ? Error : Standard;
        }

        <nhs-form-group nhs-form-group-type=@notificationDateGroupState id="Notification-NotificationDate">
            <nhs-fieldset aria-describedby="notification-date-error" role="group">
                <nhs-fieldset-legend nhs-legend-size="Standard" classes="govuk-visually-hidden">
                    Notification date
                </nhs-fieldset-legend>
                <span nhs-span-type="ErrorMessage" ref="errorField"
                      id="notification-date-error" asp-validation-for="Notification.NotificationDate" has-error="@hasNotificationDateError"></span>
                <nhs-date-input id="notification-date">
                    <nhs-date-input-item>
                        <nhs-form-group nhs-form-group-type="Standard">
                            <label nhs-label-type="Date" asp-for="FormattedNotificationDate.Day">Day</label>
                            <input v-on:blur="validate" ref="dayInput" nhs-input-type="Date" fixed-width="Two"
                                   is-error-input=@hasNotificationDateError asp-for="FormattedNotificationDate.Day" />
                        </nhs-form-group>
                    </nhs-date-input-item>
                    <nhs-date-input-item>
                        <nhs-form-group nhs-form-group-type="Standard">
                            <label nhs-label-type="Date" asp-for="FormattedNotificationDate.Month">Month</label>
                            <input v-on:blur="validate" ref="monthInput" nhs-input-type="Date" fixed-width="Two"
                                   is-error-input=@hasNotificationDateError asp-for="FormattedNotificationDate.Month" />
                        </nhs-form-group>
                    </nhs-date-input-item>
                    <nhs-date-input-item>
                        <nhs-form-group nhs-form-group-type="Standard">
                            <label nhs-label-type="Date" asp-for="FormattedNotificationDate.Year">Year</label>
                            <input v-on:blur="validate" ref="yearInput" nhs-input-type="Date" fixed-width="Four"
                                   is-error-input=@hasNotificationDateError asp-for="FormattedNotificationDate.Year" />
                        </nhs-form-group>
                    </nhs-date-input-item>
                </nhs-date-input>
            </nhs-fieldset>
        </nhs-form-group>
    </validate-date>
    <br />

    <filtered-dropdown filter-handler-path="GetFilteredListsByTbService" :filtering-refs="['caseManagers', 'hospitals']" inline-template>
        <nhs-fieldset>
            <nhs-fieldset-legend nhs-legend-size="Large">
                <h2 class="nhsuk-fieldset__heading"> @title </h2>
            </nhs-fieldset-legend>

            @if (Model.Notification.NotificationStatus == NotificationStatus.Draft)
            {
                <validate-input model="HospitalDetails" property="TBServiceCode" shouldvalidatefull="@fullValidation"
                                ref="filterContainer" v-on:mounted="filteringMounted" v-on:valid="filteringChanged" inline-template>
                    @{
                        var hasTbServiceCodeError = !Model.IsValid("HospitalDetails.TBServiceCode");
                        var tbServiceCodeGroupState = hasTbServiceCodeError ? Error : Standard;
                        var tbServiceCodeSelectErrorState = hasTbServiceCodeError ? SelectType.Error : SelectType.Standard;
                    }
                    <nhs-form-group nhs-form-group-type="@tbServiceCodeGroupState" id="HospitalDetails-TBServiceCode">
                        <label nhs-label-type="Standard" asp-for="HospitalDetails.TBServiceCode">
                            @("TB service (required)")
                        </label>
                        <span nhs-span-type="ErrorMessage" id="tb-service-error" has-error="@hasTbServiceCodeError"
                              ref="errorField" asp-validation-for="HospitalDetails.TBServiceCode"></span>
                        <select ref="selectField" nhs-select-type="@tbServiceCodeSelectErrorState" asp-for="HospitalDetails.TBServiceCode"
                                asp-items="Model.TbServices" v-on:change="validate">
                        </select>
                    </nhs-form-group>
                </validate-input>
            }
            else
            {
                <div>
                    <input asp-for="HospitalDetails.TBServiceCode" type="hidden" />
                    <p class="no-bottom-margin"> TB Service </p>
                    <label for="disabled-hospital-select" class="govuk-visually-hidden">
                        TB Service (Disabled)
                    </label>
                    <select nhs-select-type="Standard" id="disabled-hospital-select" title="TB Service cannot be changed after notification" disabled="disabled">
                        <option value="@Model.Notification.HospitalDetails?.TBService?.Code" selected="selected"> @Model.Notification.HospitalDetails?.TBService?.Name </option>
                    </select>
                </div>
                <br />
            }

            <validate-input model="HospitalDetails" property="HospitalId" shouldvalidatefull="@fullValidation"
                            ref="hospitals" inline-template>
                @{
                    var hasHospitalError = !Model.IsValid("HospitalDetails.HospitalId");
                    var hospitalGroupState = hasHospitalError ? Error : Standard;
                    var hospitalSelectErrorState = hasHospitalError ? SelectType.Error : SelectType.Standard;
                }
                <nhs-form-group nhs-form-group-type="@hospitalGroupState" id="HospitalDetails-HospitalId">
                    <label nhs-label-type="Standard" asp-for="HospitalDetails.HospitalId">
                        Hospital (required)
                    </label>
                    <span nhs-span-type="ErrorMessage" id="hospital-error" has-error="@hasHospitalError"
                          ref="errorField" asp-validation-for="HospitalDetails.HospitalId"></span>
                    <select ref="selectField" nhs-select-type="@hospitalSelectErrorState" asp-for="HospitalDetails.HospitalId"
                            asp-items="Model.Hospitals" v-on:change="validate">
                        <option value="" selected>Please select</option>
                    </select>
                </nhs-form-group>
            </validate-input>

            <validate-input model="HospitalDetails" property="Consultant" shouldvalidatefull="@fullValidation" inline-template>
                @{
                    var hasConsultantError = !Model.IsValid("HospitalDetails.Consultant");
                    var consultantGroupState = hasConsultantError ? Error : Standard;
                }
                <nhs-form-group nhs-form-group-type="@consultantGroupState" id="HospitalDetails-Consultant">
                    <label nhs-label-type="Standard" asp-for="HospitalDetails.Consultant">Consultant</label>
                    <span ref="errorField" nhs-span-type="ErrorMessage" id="consultant-error" asp-validation-for="HospitalDetails.Consultant"
                          has-error="@hasConsultantError"></span>
                    <input ref="inputField" v-on:blur="validate" is-error-input="@hasConsultantError" nhs-input-type="Standard" aria-describedby="consultant-error"
                           asp-for="HospitalDetails.Consultant" fixed-width="Ten" />
                </nhs-form-group>
            </validate-input>

            <govuk-warning-text id="case-manager-warning" is-hidden="@(!Model.HasNonActiveCaseManager)">
                <strong>The case manager assigned to the notification is not active or is no longer a member of this TB service.</strong>
            </govuk-warning-text>
            @{
                var hasCaseManagerError = !Model.IsValid("HospitalDetails.CaseManagerId");
                var caseManagerGroupState = hasCaseManagerError ? Error : Standard;
                var caseManagerSelectErrorState = hasCaseManagerError ? SelectType.Error : SelectType.Standard;
            }
            <nhs-form-group nhs-form-group-type="@caseManagerGroupState" id="HospitalDetails-CaseManagerId" ref="caseManagers">
                <label nhs-label-type="Standard" asp-for="HospitalDetails.CaseManagerId">
                    Case manager
                </label>
                <span nhs-span-type="ErrorMessage" id="case-manager-error" has-error="@hasCaseManagerError"
                      ref="errorField" asp-validation-for="HospitalDetails.CaseManagerId"></span>
                <select ref="selectField" nhs-select-type="@caseManagerSelectErrorState" asp-for="HospitalDetails.CaseManagerId"
                        asp-items="Model.CaseManagers">
                    <option value="" selected>Please select</option>
                </select>
            </nhs-form-group>
            <br />
        </nhs-fieldset>
    </filtered-dropdown>
    <input type="hidden" asp-for="HospitalDetails.SecondaryTBServiceCode" >
    <input type="hidden" asp-for="HospitalDetails.ReasonForTBServiceShare" >

</div>
