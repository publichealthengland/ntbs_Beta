@page "/Notifications/{NotificationId:int}/Edit/TestResults/{handler?}"
@model TestResultsModel
@using ntbs_service.Models
@using static NHSUK.FrontEndLibrary.TagHelpers.FormGroupType

@{
    Layout = "../../Shared/_NotificationEditLayout.cshtml";
    var title = NotificationSection.TestResults.ToDisplayString();
    ViewData["Title"] = $"Notification #{Model.NotificationId} - {title}";
    var fullValidation = Model.TestData.ShouldValidateFull ? "True" : "False";
}

<partial name="_SinglePageErrorSummaryPartial"/>

<h2> @title </h2>
<nhs-hint nhs-hint-type="Standard" id="id-types-hint" classes="search-hint">
    Please verify the test results displayed against the clinical record to ensure correctness.  Please note that the primary clinical record should be used for patient care.
</nhs-hint> <br>

<partial name="_LabResults" for="@Model.CultureAndResistance" />

@{ ViewData["ShowUnmatchLinks"] = true; }
<partial name="_SpecimenDetails" for="@Model.Specimens" />

<div>
    <input type="hidden" asp-for="TestData.NotificationId">

    <hide-section-if-not-true inline-template>
        <div>
            <h3>Manually-entered test results</h3>
            <validate-input model="TestData" property="HasTestCarriedOut" shouldvalidatefull="@fullValidation" v-on:valid="hideOrShowSection" v-on:mounted="hideOrShowSection" ref="inner-validate" inline-template>
                @{
                    var hasTestCarriedOutError = !Model.IsValid("TestData.HasTestCarriedOut");
                    var testCarriedOutGroupState = hasTestCarriedOutError ? Error : Standard;
                    var hasTestsCarriedOutAndRowsEntered = Model.TestData.HasTestCarriedOut == true && Model.TestData.ManualTestResults.Any();
                    var hasTestCarriedOutDisabledText = hasTestsCarriedOutAndRowsEntered ? "Cannot modify value when manual tests are logged against notification" : string.Empty;
                }
                <nhs-form-group nhs-form-group-type="@testCarriedOutGroupState" id="TestData-HasTestCarriedOut">
                    <nhs-fieldset aria-describedby="test-carried-out-error@(hasTestsCarriedOutAndRowsEntered ? " test-carried-out-disabled" : string.Empty)" title="@hasTestCarriedOutDisabledText">
                        <nhs-fieldset-legend nhs-legend-size="Standard">
                            @Html.DisplayNameFor(m => m.TestData.HasTestCarriedOut)
                        </nhs-fieldset-legend>
                        @if (hasTestsCarriedOutAndRowsEntered)
                        {
                            <span id="test-carried-out-disabled" class="govuk-visually-hidden">@hasTestCarriedOutDisabledText</span>
                            <input type="hidden" asp-for="TestData.HasTestCarriedOut" />
                        }
                        <span nhs-span-type="ErrorMessage" ref="errorField" asp-validation-for="TestData.HasTestCarriedOut" has-error="@hasTestCarriedOutError" id="test-carried-out-error"></span>
                        <nhs-radios nhs-radios-type="Standard" v-on:change="validate">
                            <nhs-radios-item>
                                <input nhs-input-type="Radios" asp-for="TestData.HasTestCarriedOut" id="test-carried-out-yes" ref="conditional-true" type="radio" value="true" disabled="@hasTestsCarriedOutAndRowsEntered" />
                                <label nhs-label-type="Radios" for="test-carried-out-yes">Yes</label>
                            </nhs-radios-item>
                            <nhs-radios-item>
                                <input nhs-input-type="Radios" asp-for="TestData.HasTestCarriedOut" id="test-carried-out-no" type="radio" value="false" disabled="@hasTestsCarriedOutAndRowsEntered" />
                                <label nhs-label-type="Radios" for="test-carried-out-no">No</label>
                            </nhs-radios-item>
                        </nhs-radios>
                    </nhs-fieldset>
                </nhs-form-group>
            </validate-input>
            
            <div ref="conditional-section">
                @{
                    ViewData["ShowManualResultsEditLinks"] = true;
                }
                <partial name="_ManualTestResultTable" for="TestData.ManualTestResults" />

                <button id="add-new-manual-test-result-button"
                        nhs-button-type="Standard"
                        classes="ntbsuk-button--primary"
                        name="actionName"
                        value="@ActionNameString.Create">
                    Add New
                </button>
            </div>
        </div>
    </hide-section-if-not-true>
</div>