@model TravelModel
@using NHSUK.FrontEndLibrary.TagHelpers
@using ntbs_service.Models.Entities
@using ntbs_service.Models.Enums
@using static NHSUK.FrontEndLibrary.TagHelpers.FormGroupType

@{
    var selectDropdownPlaceholder = "Select from list";
    var fullValidation = Model.TravelDetails.ShouldValidateFull ? "True" : "False";
}
<validate-travel-or-visit model-type="visitor" shouldvalidatefull="@fullValidation" inline-template>
    <nhs-form-group nhs-form-group-type="Standard">
        <nhs-fieldset>
            <nhs-fieldset-legend nhs-legend-size="Standard">
                @Html.DisplayNameFor(m => m.VisitorDetails.HasVisitor)
            </nhs-fieldset-legend>
            <div class="nhsuk-radios govuk-radios--conditional" data-module="govuk-radios" v-on:focusout="validate">
                <div class="nhsuk-radios__item">
                    <input asp-for="VisitorDetails.HasVisitor" nhs-input-type="Radios" type="radio" value="@Status.Yes"
                           id="visitorDetails-hasVisitorYes" ref="hasDataYes" data-aria-controls="conditional-has-visitor" />
                    <label for="visitorDetails-hasVisitorYes" nhs-label-type="Radios">
                        @Status.Yes
                    </label>
                </div>

                <div class="govuk-radios__conditional govuk-radios__conditional--hidden" id="conditional-has-visitor">
                    <nhs-fieldset>
                        <nhs-fieldset-legend nhs-legend-size="Standard" classes="govuk-visually-hidden">
                            Visit details
                        </nhs-fieldset-legend>

                        @{
                            var hasTotalError = !Model.IsValid($"{nameof(VisitorDetails)}.{nameof(VisitorDetails.TotalNumberOfCountries)}");
                            var totalFormGroup = hasTotalError ? Error : Standard;
                        }
                        <nhs-form-group nhs-form-group-type="@totalFormGroup" ref="totalNumberOfCountriesFormGroup" id="VisitorDetails-TotalNumberOfCountries">
                            <label asp-for="VisitorDetails.TotalNumberOfCountries" nhs-label-type="Standard">
                                Total number of countries visited from
                            </label>
                            <span asp-validation-for="VisitorDetails.TotalNumberOfCountries" nhs-span-type="ErrorMessage"
                                  id="visitor-total-error" ref="totalNumberOfCountriesErrorRef" has-error="@hasTotalError"></span>
                            <input asp-for="VisitorDetails.TotalNumberOfCountries" nhs-input-type="Standard" fixed-width="Two" is-error-input="@hasTotalError"
                                   ref="totalNumberOfCountries" aria-describedby="visitor-total-error"/>
                        </nhs-form-group>

                        @{
                            var hasCountry1IdError = !Model.IsValid($"{nameof(VisitorDetails)}.{nameof(VisitorDetails.Country1Id)}");
                            var country1FormGroup = hasCountry1IdError ? Error : Standard;
                            var country1SelectType = hasCountry1IdError ? SelectType.Error : SelectType.Standard;
                        }
                        <nhs-form-group nhs-form-group-type="@country1FormGroup" ref="country1IdFormGroup" id="VisitorDetails-Country1Id">
                            <label asp-for="VisitorDetails.Country1Id" nhs-label-type="Standard">
                                Most recent country visited from
                            </label>
                            <span asp-validation-for="VisitorDetails.Country1Id" nhs-span-type="ErrorMessage"
                                  id="visitor-country1Id-error" ref="country1IdErrorRef" has-error="@hasCountry1IdError"></span>
                            <div ref="country1Id" aria-describedby="visitor-country1Id-error">
                                <autocomplete-select placeholder="@selectDropdownPlaceholder" emit-change-on="blur" inline-template>
                                    <select asp-for="VisitorDetails.Country1Id" asp-items="Model.HighTbIncidenceCountries" ref="selectField" id="selectVisitorCountry">
                                        <option value=""></option>
                                    </select>
                                </autocomplete-select>
                            </div>
                        </nhs-form-group>

                        @{
                            var hasStayLength1Error = !Model.IsValid($"{nameof(VisitorDetails)}.{nameof(VisitorDetails.StayLengthInMonths1)}");
                            var length1FormGroup = hasStayLength1Error ? Error : Standard;
                        }
                        <nhs-form-group nhs-form-group-type="@length1FormGroup" ref="stayLengthInMonths1FormGroup" id="VisitorDetails-StayLengthInMonths1">
                            <label asp-for="VisitorDetails.StayLengthInMonths1" nhs-label-type="Standard">
                                Duration of visit in months
                            </label>
                            <span asp-validation-for="VisitorDetails.StayLengthInMonths1" nhs-span-type="ErrorMessage"
                                  id="visitor-length1-error" ref="stayLengthInMonths1ErrorRef" has-error="@hasStayLength1Error"></span>
                            <input asp-for="VisitorDetails.StayLengthInMonths1" nhs-input-type="Standard" fixed-width="Two" is-error-input="@hasStayLength1Error"
                                   ref="stayLengthInMonths1" aria-describedby="visitor-length1-error"/>
                        </nhs-form-group>

                        @{
                            var hasCountry2IdError = !Model.IsValid($"{nameof(VisitorDetails)}.{nameof(VisitorDetails.Country2Id)}");
                            var country2FormGroup = hasCountry2IdError ? Error : Standard;
                        }
                        <nhs-form-group nhs-form-group-type="@country2FormGroup" ref="country2IdFormGroup" id="VisitorDetails-Country2Id">
                            <label asp-for="VisitorDetails.Country2Id" nhs-label-type="Standard">
                                2nd most recent country visited from
                            </label>
                            <span asp-validation-for="VisitorDetails.Country2Id" nhs-span-type="ErrorMessage"
                                  id="visitor-country2Id-error" ref="country2IdErrorRef" has-error="@hasCountry2IdError"></span>
                            <div ref="country2Id" aria-describedby="visitor-country2Id-error">
                                <autocomplete-select placeholder="@selectDropdownPlaceholder" emit-change-on="blur" inline-template>
                                    <select asp-for="VisitorDetails.Country2Id" asp-items="Model.HighTbIncidenceCountries" ref="selectField" id="selectVisitorCountry2">
                                        <option value=""></option>
                                    </select>
                                </autocomplete-select>
                            </div>
                        </nhs-form-group>

                        @{
                            var hasStayLength2Error = !Model.IsValid($"{nameof(VisitorDetails)}.{nameof(VisitorDetails.StayLengthInMonths2)}");
                            var length2FormGroup = hasStayLength2Error ? Error : Standard;
                        }
                        <nhs-form-group nhs-form-group-type="@length2FormGroup" ref="stayLengthInMonths2FormGroup" id="VisitorDetails-StayLengthInMonths2">
                            <label asp-for="VisitorDetails.StayLengthInMonths2" nhs-label-type="Standard">
                                Duration of visit in months
                            </label>
                            <span asp-validation-for="VisitorDetails.StayLengthInMonths2" nhs-span-type="ErrorMessage"
                                  id="visitor-length2-error" ref="stayLengthInMonths2ErrorRef" has-error="@hasStayLength2Error"></span>
                            <input asp-for="VisitorDetails.StayLengthInMonths2" nhs-input-type="Standard" fixed-width="Two" is-error-input="@hasStayLength2Error"
                                   ref="stayLengthInMonths2" aria-describedby="visitor-length2-error"/>
                        </nhs-form-group>

                        @{
                            var hasCountry3IdError = !Model.IsValid($"{nameof(VisitorDetails)}.{nameof(VisitorDetails.Country3Id)}");
                            var country3FormGroup = hasCountry3IdError ? Error : Standard;
                        }
                        <nhs-form-group nhs-form-group-type="@country3FormGroup" ref="country3IdFormGroup" id="VisitorDetails-Country3Id">
                            <label asp-for="VisitorDetails.Country3Id" nhs-label-type="Standard">
                                3rd most recent country visited from
                            </label>
                            <span asp-validation-for="VisitorDetails.Country3Id" nhs-span-type="ErrorMessage"
                                  id="visitor-country3Id-error" ref="country3IdErrorRef" has-error="@hasCountry3IdError"></span>
                            <div ref="country3Id" aria-describedby="visitor-country3Id-error">
                                <autocomplete-select placeholder="@selectDropdownPlaceholder" emit-change-on="blur" inline-template>
                                    <select asp-for="VisitorDetails.Country3Id" asp-items="Model.HighTbIncidenceCountries" ref="selectField" id="selectVisitorCountry3">
                                        <option value=""></option>
                                    </select>
                                </autocomplete-select>
                            </div>
                        </nhs-form-group>

                        @{
                            var hasStayLength3Error = !Model.IsValid($"{nameof(VisitorDetails)}.{nameof(VisitorDetails.StayLengthInMonths3)}");
                            var length3FormGroup = hasStayLength3Error ? Error : Standard;
                        }
                        <nhs-form-group nhs-form-group-type="@length3FormGroup" ref="stayLengthInMonths3FormGroup" id="VisitorDetails-StayLengthInMonths3">
                            <label asp-for="VisitorDetails.StayLengthInMonths3" nhs-label-type="Standard">
                                Duration of visit in months
                            </label>
                            <span asp-validation-for="VisitorDetails.StayLengthInMonths3" nhs-span-type="ErrorMessage"
                                  id="visitor-length3-error" ref="stayLengthInMonths3ErrorRef" has-error="@hasStayLength3Error"></span>
                            <input asp-for="VisitorDetails.StayLengthInMonths3" nhs-input-type="Standard" fixed-width="Two" is-error-input="@hasStayLength3Error"
                                   ref="stayLengthInMonths3" aria-describedby="visitor-length3-error"/>
                        </nhs-form-group>
                    </nhs-fieldset>
                </div>

                <div class="nhsuk-radios__item">
                    <input asp-for="VisitorDetails.HasVisitor" nhs-input-type="Radios" type="radio" value="@Status.No"
                           id="visitorDetails-hasVisitorNo" ref="hasDataNo" />
                    <label for="visitorDetails-hasVisitorNo" nhs-label-type="Radios">
                        @Status.No
                    </label>
                </div>
                
                <div class="nhsuk-radios__item">
                    <input asp-for="VisitorDetails.HasVisitor" nhs-input-type="Radios" type="radio" value="@Status.Unknown"
                           id="visitorDetails-hasVisitorUnknown" ref="hasDataUnknown" />
                    <label for="visitorDetails-hasVisitorUnknown" nhs-label-type="Radios">
                        @Status.Unknown
                    </label>
                </div>
            </div>
        </nhs-fieldset>
    </nhs-form-group>
</validate-travel-or-visit>
